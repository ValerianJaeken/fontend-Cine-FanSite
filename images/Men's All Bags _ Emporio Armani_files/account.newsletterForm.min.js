define(["ytos.account","ui.layer","ui.ajaxForm","ui.selectAsList","ui.radioGroup","ui.recaptcha"],function(a,b,c,d,e,f){return yTos.utils.namespace("yTos.helpers.Account.NewsletterForm"),yTos.helpers.Account.NewsletterForm=yTos.helpers.base.extend({initialize:function(){this.refreshOnLoad()},globalMessages:{"yTos::Account::UserLoggedIn":"onUserIsLoggedIn","yTos::Account::UserLoggedOut":"onUserIsLoggedOut"},form:{success:"onFormsSuccess",error:"onFormsError"},requiredHelpers:{selectAsList:d,radioGroup:e,Recaptcha:f},onFormsSuccess:function(a){this.notify("yTos::Account::SubscribeNewsletterSuccess",{},{scope:this.scope}),this.updatePageContent(a)},onFormsError:function(a){this.notify("yTos::Account::SubscribeNewsletterError",{},{scope:this.scope}),this.updatePageContent(null)},onUserIsLoggedIn:function(){this.toggleLoggedClass(!0)},onUserIsLoggedOut:function(){this.toggleLoggedClass(!1)},toggleLoggedClass:function(a){this.$el.toggleClass("isLogged",a)},refreshOnLoad:function(){0===this.$("form").length&&this.refresh()},refreshOnAntiforgeryException:function(){this.refresh()},refresh:function(){this.getHTML("/yTos/Plugins/AccountPlugin/RefreshNewsletterForm",{data:this.options,success:function(a){var b=$(a).data("ytos-islogged");this.toggleLoggedClass(b),this.notify("yTos::Account::NewsletterFormRefreshed",{isLogged:b})}.bind(this),autoUpdate:!0,stripMe:!0})},updatePageContent:function(a){a&&this.$el.html(a),this.notify("yTos::Account::NewsletterFormUpdated");var b=$Y.where({name:"NewsletterViewModel.Email"},this.$el.find("form").serializeArray())[0]||{};this.notify("yTos::Account::NewsletterRegistrionAttemptCompleted",{email:b.value})}}),yTos.helpers.Account.NewsletterForm});